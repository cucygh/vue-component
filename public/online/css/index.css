@charset "UTF-8";
/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架全局Reset
 -----------------------
 * Yo重置Mobile及高级浏览器上常见的差异
 *
 * @class reset
 * @module Yo
 */
*,
::before,
::after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  -webkit-tap-highlight-color: transparent; }

html {
  background-color: #fafafa;
  color: #212121;
  font-size: 100px;
  -webkit-user-select: none;
  user-select: none; }

body {
  margin: 0;
  font-size: 14px;
  line-height: 1.5;
  font-family: Helvetica Neue, Helvetica, STHeiTi, sans-serif; }

ul,
ol,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
figure,
form,
fieldset,
legend,
input,
textarea,
button,
p,
blockquote,
th,
td,
pre,
xmp {
  margin: 0;
  padding: 0; }

input,
textarea,
button,
select,
pre,
xmp,
tt,
code,
kbd,
samp {
  line-height: inherit;
  font-family: inherit; }

h1,
h2,
h3,
h4,
h5,
h6,
small,
big,
input,
textarea,
button,
select {
  font-size: inherit; }

address,
cite,
dfn,
em,
i,
optgroup,
var {
  font-style: normal; }

table {
  border-collapse: collapse;
  border-spacing: 0;
  table-layout: fixed;
  text-align: left; }

ul,
ol,
menu {
  list-style: none; }

fieldset,
img {
  border: 0;
  vertical-align: middle; }

article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  display: block; }

audio,
canvas,
video {
  display: inline-block; }

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: "\0020"; }

textarea,
pre,
xmp {
  overflow: auto;
  -webkit-overflow-scrolling: touch; }

textarea {
  resize: vertical; }

input,
textarea,
button,
select
a {
  outline: 0 none; }

input,
textarea,
button,
select {
  color: inherit; }
  input:disabled,
  textarea:disabled,
  button:disabled,
  select:disabled {
    opacity: 1; }

button::-moz-focus-inner,
input::-moz-focus-inner {
  padding: 0;
  border: 0; }

input[type="button"],
input[type="submit"],
input[type="reset"],
input[type="file"]::-webkit-file-upload-button,
input[type="search"]::-webkit-search-cancel-button {
  -webkit-appearance: none;
  appearance: none; }

mark {
  background-color: transparent; }

a,
ins,
s,
u,
del {
  text-decoration: none; }

a,
img {
  -webkit-touch-callout: none; }

a {
  color: #00afc7; }

.g-clear::after,
.g-mod::after {
  display: block;
  overflow: hidden;
  clear: both;
  height: 0;
  content: "\0020"; }

html,
body {
  overflow: hidden;
  height: 100%; }

@font-face {
  font-family: yofont;
  src: url("http://source.qunarzz.com/fonts/yo/1.0.0/yofont.woff") format("woff"), url("http://source.qunarzz.com/fonts/yo/1.0.0/yofont.ttf") format("truetype"); }
.yo-ico {
  font-family: yofont !important;
  font-style: normal;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  vertical-align: middle; }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架element基础构造
 -----------------------
 * Yo内置了包括按钮，输入框，单选，多选，区间，分值等基础元素
 *
 * @class element
 * @module Yo
 */
/**
 * @class element
 */
/**
 * 构造提醒气泡的自定义使用方法，可以扩展为：tag, 文字ico等形态
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/element/yo-btn.html)
 * @method yo-badge
 * @param {String} $name 为新的扩展定义一个名称，假设扩展了一个 `$name` 为 `tag` 的 `yo-badge`，那么你可以这样使用 `<span class="yo-badge yo-badge-tag">`
 * @param {Length} $padding 内补白
 * @param {Length} $border-width 边框厚度
 * @param {Color} $bordercolor 边框色
 * @param {Color} $bgcolor 背景色
 * @param {Color} $color 文本色
 * @param {Length} $radius 圆角半径长度
 * @param {Length} $font-size 字号大小
 */
.yo-badge {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: inline-flex;
  min-width: .16rem;
  min-height: .16rem;
  padding: 0 0.03rem;
  border-width: 0.01rem;
  border-style: solid;
  border-color: #f00;
  border-radius: 0.1rem;
  -webkit-background-clip: padding-box !important;
  background-clip: padding-box !important;
  background-color: #f00;
  color: #fff;
  font-size: 0.12rem;
  line-height: 1;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center; }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架element基础构造
 -----------------------
 * Yo内置了包括按钮，输入框，单选，多选，区间，分值等基础元素
 *
 * @class element
 * @module Yo
 */
/**
 * @class element
 */
/**
 * 构造按钮的自定义使用方法，可轻松自定义边框，尺寸，背景，文字等
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/element/yo-btn.html)
 * @method yo-btn
 * @param {String} $name 为新的按钮扩展定义一个名称
 * @param {Length} $border-width 按钮边框厚度
 * @param {Color} $bordercolor 按钮边框色
 * @param {Color} $bgcolor 按钮背景色
 * @param {Color} $color 按钮文本色
 * @param {Color} $active-bordercolor 触点（鼠标，手指或其它）按下时的按钮边框色
 * @param {Color} $active-bgcolor 触点（鼠标，手指或其它）按下的按钮背景色
 * @param {Color} $active-color 触点（鼠标，手指或其它）按下的按钮文本色
 * @param {Length} $padding 按钮内补白
 * @param {Length} $radius 按钮圆角半径长度
 * @param {Length} $font-size 按钮字号大小
 * @param {Length} $width 按钮宽度
 * @param {Length} $height 按钮高度
 */
.yo-btn {
  display: inline-block;
  overflow: hidden;
  padding: 0 1.2em;
  vertical-align: top;
  border-width: 0.01rem;
  border-style: solid;
  border-color: #e26704;
  border-radius: 0.02rem;
  -webkit-background-clip: padding-box !important;
  background-clip: padding-box !important;
  background-color: #ff801a;
  color: #fff;
  text-align: center;
  cursor: pointer; }
  .yo-btn-disabled {
    opacity: 1;
    cursor: not-allowed; }
    .yo-btn-disabled, .yo-btn-disabled:focus, .yo-btn-disabled:active {
      border-color: #ccc;
      background-color: #e0e0e0;
      color: #bbb; }
  .yo-btn-s {
    height: 0.28rem;
    line-height: 0.28rem;
    font-size: 0.12rem; }
  .yo-btn-m {
    height: 0.36rem;
    line-height: 0.36rem;
    font-size: 0.14rem; }
  .yo-btn-l {
    height: 0.44rem;
    line-height: 0.44rem;
    font-size: 0.16rem; }
  .yo-btn-stacked {
    display: block;
    width: 100%; }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架element基础构造
 -----------------------
 * Yo内置了包括按钮，输入框，单选，多选，区间，分值等基础元素
 *
 * @class element
 * @module Yo
 */
/**
 * @class element
 */
/**
 * 构造单选多选的自定义使用方法，可同时作用于 checkbox 与 radio
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/element/yo-checked.html)
 * @method yo-checked
 * @param {String} $name 为新的扩展定义一个名称
 * @param {String} $content 标记（对勾，圆点或者任意字符，可以是webfonts的编码）
 * @param {Length} $size 元件大小
 * @param {Length} $font-size 标记大小
 * @param {Length} $border-width 边框厚度
 * @param {Color} $bordercolor 边框色
 * @param {Color} $bgcolor 背景色
 * @param {Color} $color 标记色
 * @param {Color} $on-bordercolor 选中时的边框色
 * @param {Color} $on-bgcolor 选中时的背景色
 * @param {Color} $on-color 选中时的标记色
 * @param {Length} $radius 圆角半径长度
 */
.yo-checked {
  display: inline-block;
  position: relative;
  width: 0.2rem;
  height: 0.2rem;
  font-size: 0.12rem;
  font-family: yofont;
  text-align: center;
  vertical-align: middle;
  cursor: pointer; }
  .yo-checked > input,
  .yo-checked > .type {
    display: inline-block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }
  .yo-checked > input {
    z-index: 2;
    opacity: 0; }
  .yo-checked > .type {
    border-radius: 0.05rem;
    -webkit-background-clip: padding-box !important;
    background-clip: padding-box !important;
    background-color: transparent;
    line-height: 0.2rem; }
    .yo-checked > .type::after {
      content: "";
      color: transparent; }
  .yo-checked > input:checked + .type::after {
    color: #00bec8; }
  .yo-checked > input:disabled + .type {
    opacity: .4;
    background-color: #e0e0e0 !important; }
    .yo-checked > input:disabled + .type::after {
      color: #bbb !important; }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架element基础构造
 -----------------------
 * Yo内置了包括按钮，输入框，单选，多选，区间，分值等基础元素
 *
 * @class element
 * @module Yo
 */
/**
 * @class element
 */
/**
 * 构造输入框的自定义使用方法，可同时作用于 input 与 textarea
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/element/yo-input.html)
 * @method yo-input
 * @param {String} $name 为新的扩展定义一个名称
 * @param {Length} $width 宽度
 * @param {Length} $height 高度
 * @param {Length} $padding 内补白
 * @param {Length} $radius 圆角半径长度
 * @param {Color} $bordercolor 边框色
 * @param {Color} $bgcolor 背景色
 * @param {Color} $color 文本色
 * @param {Color} $placeholder-color placeholder文本色
 */
.yo-input {
  width: 100%;
  height: 0.44rem;
  padding: 0.1rem;
  border: 1px solid #ddd;
  border-radius: 0.02rem;
  -webkit-background-clip: padding-box !important;
  background-clip: padding-box !important;
  background-color: transparent;
  vertical-align: top; }
  .yo-input, .yo-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    appearance: none; }
  .yo-input::-webkit-input-placeholder {
    color: #bbb; }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架element基础构造
 -----------------------
 * Yo内置了包括按钮，输入框，单选，多选，区间，分值等基础元素
 *
 * @class element
 * @module Yo
 */
/**
 * Yo框架动画解决方案
 -----------------------
 * Yo内置了超过60种动画形态，不同的动画可以任意组合
 *
 * @class ani
 * @module Yo
 */
.ani {
  -webkit-animation-duration: 1s;
  animation-duration: 1s;
  -webkit-animation-fill-mode: both;
  animation-fill-mode: both; }

.ani.infinite {
  -webkit-animation-iteration-count: infinite;
  animation-iteration-count: infinite; }

/**
 * @class ani
 * @module Yo
 */
/**
 * 定义旋转动画
 * @method rotate
 */
@-webkit-keyframes rotate {
  from {
    -webkit-transform: rotatez(0); }
  to {
    -webkit-transform: rotatez(360deg); } }
@keyframes rotate {
  from {
    transform: rotatez(0); }
  to {
    transform: rotatez(360deg); } }
.ani.rotate {
  -webkit-animation-name: rotate;
  animation-name: rotate; }

/**
 * @class element
 */
/**
 * 构造加载提示的自定义使用方法
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/element/yo-loadtip.html)
 * @method yo-loadtip
 * @param {String} $name 为新的扩展定义一个名称
 * @param {Color} $color 文本色
 * @param {Length} $font-size 字号大小
 * @param {Color} $ico-color ico颜色
 */
.yo-loadtip {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: inline-flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
  color: #666;
  font-size: 0.14rem; }
  .yo-loadtip > .yo-ico {
    display: block;
    -webkit-transform-origin: center;
    transform-origin: center;
    color: #00afc7;
    -webkit-transition: -webkit-transform .3s;
    transition: transform .3s;
    -webkit-transform: rotatez(0deg);
    transform: rotatez(0deg); }
    .yo-loadtip > .yo-ico-flip {
      -webkit-transform: rotatez(180deg);
      transform: rotatez(180deg); }
  .yo-loadtip > .yo-ico-loading {
    -webkit-animation: rotate 1s infinite linear;
    animation: rotate 1s infinite linear; }
  .yo-loadtip > .text {
    margin-left: .1rem; }
    .yo-loadtip > .text > .time {
      display: block;
      font-size: .12rem; }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架element基础构造
 -----------------------
 * Yo内置了包括按钮，输入框，单选，多选，区间，分值等基础元素
 *
 * @class element
 * @module Yo
 */
/**
 * @class element
 */
/**
 * 构造评分展示的自定义使用方法
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/element/yo-score.html)
 * @method yo-score
 * @param {String} $name 为新的扩展定义一个名称
 * @param {Length} $item-width 单项宽度
 * @param {Length} $item-height 单项高度
 * @param {String} $url 背景图片url
 */
.yo-score {
  position: relative;
  width: 0.8rem;
  height: 0.12rem;
  overflow: hidden; }
  .yo-score,
  .yo-score > .index {
    display: inline-block;
    background: url(../../../bgimg/star.png) repeat-x;
    background-size: auto 0.24rem; }
  .yo-score > .index {
    height: 100%;
    background-position: 0 -0.12rem;
    line-height: 10;
    vertical-align: top; }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架fragment基础构造
 -----------------------
 * Yo内置了包括：dialog, popup, tip, tab, switch, rating等基础组件
 *
 * @class fragment
 * @module Yo
 */
/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架element基础构造
 -----------------------
 * Yo内置了包括按钮，输入框，单选，多选，区间，分值等基础元素
 *
 * @class element
 * @module Yo
 */
/**
 * @class element
 */
/**
 * 构造按钮的自定义使用方法，可轻松自定义边框，尺寸，背景，文字等
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/element/yo-btn.html)
 * @method yo-btn
 * @param {String} $name 为新的按钮扩展定义一个名称
 * @param {Length} $border-width 按钮边框厚度
 * @param {Color} $bordercolor 按钮边框色
 * @param {Color} $bgcolor 按钮背景色
 * @param {Color} $color 按钮文本色
 * @param {Color} $active-bordercolor 触点（鼠标，手指或其它）按下时的按钮边框色
 * @param {Color} $active-bgcolor 触点（鼠标，手指或其它）按下的按钮背景色
 * @param {Color} $active-color 触点（鼠标，手指或其它）按下的按钮文本色
 * @param {Length} $padding 按钮内补白
 * @param {Length} $radius 按钮圆角半径长度
 * @param {Length} $font-size 按钮字号大小
 * @param {Length} $width 按钮宽度
 * @param {Length} $height 按钮高度
 */
.yo-btn {
  display: inline-block;
  overflow: hidden;
  padding: 0 1.2em;
  vertical-align: top;
  border-width: 0.01rem;
  border-style: solid;
  border-color: #e26704;
  border-radius: 0.02rem;
  -webkit-background-clip: padding-box !important;
  background-clip: padding-box !important;
  background-color: #ff801a;
  color: #fff;
  text-align: center;
  cursor: pointer; }
  .yo-btn-disabled {
    opacity: 1;
    cursor: not-allowed; }
    .yo-btn-disabled, .yo-btn-disabled:focus, .yo-btn-disabled:active {
      border-color: #ccc;
      background-color: #e0e0e0;
      color: #bbb; }
  .yo-btn-s {
    height: 0.28rem;
    line-height: 0.28rem;
    font-size: 0.12rem; }
  .yo-btn-m {
    height: 0.36rem;
    line-height: 0.36rem;
    font-size: 0.14rem; }
  .yo-btn-l {
    height: 0.44rem;
    line-height: 0.44rem;
    font-size: 0.16rem; }
  .yo-btn-stacked {
    display: block;
    width: 100%; }

/**
 * @class fragment
 */
/**
 * 构造按钮组的自定义使用方法
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/fragment/yo-btnbar.html)
 * @method yo-btnbar
 * @param {String} $name 为新的扩展定义一个名称
 * @param {Length} $radius 圆角半径长度
 */
.yo-btnbar {
  display: inline-block;
  vertical-align: middle; }
  .yo-btnbar > .yo-btn {
    float: left; }
    .yo-btnbar > .yo-btn:not(:first-child) {
      margin-left: -.01rem !important; }
    .yo-btnbar > .yo-btn:first-child {
      border-top-right-radius: 0;
      border-bottom-right-radius: 0; }
    .yo-btnbar > .yo-btn:last-child {
      border-top-left-radius: 0;
      border-bottom-left-radius: 0; }
    .yo-btnbar > .yo-btn:not(:first-child):not(:last-child) {
      border-radius: 0; }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架fragment基础构造
 -----------------------
 * Yo内置了包括：dialog, popup, tip, tab, switch, rating等基础组件
 *
 * @class fragment
 * @module Yo
 */
/**
 * @class fragment
 */
/**
 * 构造头的自定义使用方法
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/fragment/yo-header.html)
 * @method yo-header
 * @param {String} $name 定义yo-header名称
 * @param {Length} $height 定义yo-header高度
 * @param {Length} $item-width 定义yo-header两侧子项宽度
 * @param {Length} $item-space 定义yo-header两侧子项离边界的间隙
 * @param {Color} $bordercolor 定义yo-header边框色
 * @param {Color} $bgcolor 定义yo-header背景色
 * @param {Color} $color 定义yo-header文本色
 * @param {Length} $font-size 定义yo-header文本大小
 * @param {Color} $item-color 定义yo-header两侧的子项文本色
 * @param {Color} $item-ico-color 定义yo-header两侧的ico色
 * @param {Length} $item-font-size 定义yo-header两侧的子项文本大小
 * @param {Length} $item-ico-size 定义yo-header两侧的ico大小
 */
.yo-header {
  position: relative;
  height: 0.44rem;
  line-height: 0.44rem;
  border-bottom: 1px solid #ddd;
  background-color: #fff;
  font-size: 0.16rem;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  text-align: center; }
  .yo-header > .title {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    margin: 0 0.6rem; }
  .yo-header > .regret,
  .yo-header > .affirm {
    position: absolute;
    top: 0;
    width: 0.6rem;
    cursor: pointer;
    font-size: 0.14rem; }
    .yo-header > .regret:active,
    .yo-header > .affirm:active {
      opacity: .5; }
    .yo-header > .regret.yo-ico,
    .yo-header > .regret > .yo-ico,
    .yo-header > .affirm.yo-ico,
    .yo-header > .affirm > .yo-ico {
      font-size: 0.2rem; }
  .yo-header > .regret {
    left: 0;
    padding-left: 0.15rem;
    text-align: left; }
  .yo-header > .affirm {
    right: 0;
    padding-right: 0.15rem;
    text-align: right; }

.yo-header {
  border-color: #1ba9ba;
  background-color: #1ba9ba;
  color: #fff; }
  .yo-header > .regret,
  .yo-header > .affirm {
    color: #7ff; }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架fragment基础构造
 -----------------------
 * Yo内置了包括：dialog, popup, tip, tab, switch, rating等基础组件
 *
 * @class fragment
 * @module Yo
 */
/**
 * @class fragment
 */
/**
 * 构造列表的自定义使用方法
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/fragment/yo-list.html)
 * @method yo-list
 * @param {String} $name 定义list名称
 * @param {Length} $margin 定义list外边距
 * @param {Length} $radius 定义list圆角
 * @param {Length} $border-width 定义list外边框厚度
 * @param {Color} $bordercolor 定义list边框色
 * @param {Length} $item-padding 定义list项的内补白
 * @param {Length} $label-padding 定义list分组标题内补白
 * @param {Color} $label-bgcolor 定义list分组标题背景色
 * @param {Color} $active-bgcolor 定义list点击反馈背景色
 * @param {Color} $on-bgcolor 定义list选中背景色
 * @param {Color} $on-color 定义list选中文本色
 * @param {Color} $item-bordercolor 定义list子项边框色
 * @param {Color} $label-bordercolor 定义list子项组头边框色
 * @param {Length} $item-font-size 定义list项字号
 * @param {Length} $label-font-size 定义list列表组头字号
 * @param {Length} $item-border-space 列表项下边线距离左侧的间隙
 */
.yo-list > .label,
.yo-list > .item,
.yo-list .front {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
  -webkit-transform: translatez(0);
  transform: translatez(0); }
  .yo-list > .label > .mark:not(:last-child),
  .yo-list > .label > .yo-ico:not(:last-child),
  .yo-list > .item > .mark:not(:last-child),
  .yo-list > .item > .yo-ico:not(:last-child),
  .yo-list .front > .mark:not(:last-child),
  .yo-list .front > .yo-ico:not(:last-child) {
    margin-right: .1rem; }
  .yo-list > .label > .flex,
  .yo-list > .item > .flex,
  .yo-list .front > .flex {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    width: .1px; }
  .yo-list > .label > .mark,
  .yo-list > .label > .yo-ico,
  .yo-list > .label > .col,
  .yo-list > .label > .flex,
  .yo-list > .item > .mark,
  .yo-list > .item > .yo-ico,
  .yo-list > .item > .col,
  .yo-list > .item > .flex,
  .yo-list .front > .mark,
  .yo-list .front > .yo-ico,
  .yo-list .front > .col,
  .yo-list .front > .flex {
    display: block; }
  .yo-list > .label.tr,
  .yo-list > .item.tr,
  .yo-list .front.tr {
    padding: 0; }
.yo-list > .label {
  padding: 0.03rem 0.1rem;
  border: 1px solid #eee;
  border-width: 0 0 1px 0;
  background-color: #fafafa;
  color: #9e9e9e;
  font-size: 0.13rem;
  font-weight: normal; }
  .yo-list > .label > .col {
    padding: 0.03rem 0.1rem; }
  .yo-list > .label:not(:first-child) {
    border-width: 1px 0;
    margin-top: -1px; }
.yo-list > .item,
.yo-list .front {
  padding: 0.11rem; }
.yo-list > .item {
  background-color: #fff;
  color: #212121;
  font-size: 0.14rem;
  background-image: -webkit-linear-gradient(#eee, #eee);
  background-image: linear-gradient(#eee, #eee);
  -webkit-background-size: 100% 1px;
  background-size: 100% 1px;
  background-repeat: no-repeat;
  background-position: bottom; }
  .yo-list > .item:last-child {
    margin-bottom: -1px;
    background-image: -webkit-linear-gradient(#ddd, #ddd);
    background-image: linear-gradient(#ddd, #ddd);
    background-position: 0 bottom; }
  .yo-list > .item-stacked {
    display: block; }
    .yo-list > .item-stacked > .mark {
      padding-bottom: .05rem; }
  .yo-list > .item-input > .yo-input {
    height: auto;
    padding: 0;
    border: 0; }
  .yo-list > .item.item-active:active, .yo-list > .item.item-light {
    background-color: #f8f8f8; }
  .yo-list > .item > .col {
    padding: 0.11rem; }
.yo-list > .yo-slidermenu {
  display: block;
  padding: 0 0 1px 0 !important; }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架layout
 -----------------------
 * Yo内置的布局方式
 *
 * @class layout
 * @module Yo
 */
/**
 * @class layout
 */
/**
 * 构造弹性布局使用方法，可以是横向和纵向
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/layout/yo-flex.html)
 * @method yo-flex
 * @param {String} $name 为新的扩展定义一个名称
 * @param {String} $box 指定块级或者行级弹性盒
 * @param {String} $direction 指定是水平或者垂直布局
 */
.yo-flex {
  height: 100%; }
  .yo-flex,
  .yo-flex .flex-inherit {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -webkit-flex-direction: column;
    flex-direction: column;
    overflow: hidden; }
  .yo-flex > .flex,
  .yo-flex .flex-inherit,
  .yo-flex .flex-inherit > .flex {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    position: relative; }
  .yo-flex > .flex,
  .yo-flex .flex-inherit > .flex {
    overflow: auto;
    -webkit-overflow-scrolling: touch; }
    .yo-flex > .flex > .yo-flex,
    .yo-flex .flex-inherit > .flex > .yo-flex {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0; }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架layout
 -----------------------
 * Yo内置的布局方式
 *
 * @class layout
 * @module Yo
 */
/**
 * @class layout
 */
/**
 * 构造弹性布局内容对齐使用方法，可以是横向和纵向
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/layout/yo-align.html)
 * @method yo-align
 * @param {String} $name 为新的扩展定义一个名称
 * @param {String} $text-align 指定水平对齐方式
 * @param {String} $vertical-align 指定垂直对齐方式
 */
.yo-align {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  -webkit-box-align: center;
  -webkit-align-items: center;
  align-items: center;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  justify-content: center; }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架widget基础构造
 -----------------------
 * Yo内置了常见的通用代码片段，如：列表，表格，按钮组，头
 *
 * @class widget
 * @module Yo
 */
/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架element基础构造
 -----------------------
 * Yo内置了包括按钮，输入框，单选，多选，区间，分值等基础元素
 *
 * @class element
 * @module Yo
 */
/**
 * @class element
 */
/**
 * 构造按钮的自定义使用方法，可轻松自定义边框，尺寸，背景，文字等
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/element/yo-btn.html)
 * @method yo-btn
 * @param {String} $name 为新的按钮扩展定义一个名称
 * @param {Length} $border-width 按钮边框厚度
 * @param {Color} $bordercolor 按钮边框色
 * @param {Color} $bgcolor 按钮背景色
 * @param {Color} $color 按钮文本色
 * @param {Color} $active-bordercolor 触点（鼠标，手指或其它）按下时的按钮边框色
 * @param {Color} $active-bgcolor 触点（鼠标，手指或其它）按下的按钮背景色
 * @param {Color} $active-color 触点（鼠标，手指或其它）按下的按钮文本色
 * @param {Length} $padding 按钮内补白
 * @param {Length} $radius 按钮圆角半径长度
 * @param {Length} $font-size 按钮字号大小
 * @param {Length} $width 按钮宽度
 * @param {Length} $height 按钮高度
 */
.yo-btn {
  display: inline-block;
  overflow: hidden;
  padding: 0 1.2em;
  vertical-align: top;
  border-width: 0.01rem;
  border-style: solid;
  border-color: #e26704;
  border-radius: 0.02rem;
  -webkit-background-clip: padding-box !important;
  background-clip: padding-box !important;
  background-color: #ff801a;
  color: #fff;
  text-align: center;
  cursor: pointer; }
  .yo-btn-disabled {
    opacity: 1;
    cursor: not-allowed; }
    .yo-btn-disabled, .yo-btn-disabled:focus, .yo-btn-disabled:active {
      border-color: #ccc;
      background-color: #e0e0e0;
      color: #bbb; }
  .yo-btn-s {
    height: 0.28rem;
    line-height: 0.28rem;
    font-size: 0.12rem; }
  .yo-btn-m {
    height: 0.36rem;
    line-height: 0.36rem;
    font-size: 0.14rem; }
  .yo-btn-l {
    height: 0.44rem;
    line-height: 0.44rem;
    font-size: 0.16rem; }
  .yo-btn-stacked {
    display: block;
    width: 100%; }

/**
 * @class widget
 */
/**
 * 构造列表的自定义使用方法
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/widget/yo-dialog.html)
 * @method yo-dialog
 * @param {default | String} $name 定义dialog名称
 * @param {default | Length | null} $width 定义dialog宽度
 * @param {default | Length} $height 定义dialog高度
 * @param {default | Length} $radius 定义dialog圆角
 * @param {default | Number} $shadow-opacity 定义dialog阴影透明度
 * @param {default | Color} $bordercolor 定义dialog边框色
 * @param {default | Length} $hd-height 定义dialog头部高度
 * @param {default | Color} $hd-bgcolor 定义dialog头部背景色
 * @param {default | Color} $title-color 定义dialog标题文本色
 * @param {default | Length} $title-font-size 定义dialog标题字号
 * @param {default | Length} $bd-padding 定义dialog主体补白
 * @param {default | Length} $bd-font-size 定义dialog主体字号
 */
.yo-dialog {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
  flex-direction: column;
  position: fixed;
  z-index: 1001;
  overflow: hidden;
  border-radius: 0.05rem;
  -webkit-background-clip: padding-box !important;
  background-clip: padding-box !important;
  box-shadow: 0 0 5px rgba(221, 221, 221, 0.5);
  border: 1px solid #ddd;
  min-width: 2.8rem;
  max-width: 90%;
  height: 3rem;
  background: #fff;
  text-align: center; }
  .yo-dialog > .hd {
    position: relative;
    height: 0.44rem;
    background: white;
    line-height: 0.44rem; }
    .yo-dialog > .hd .title {
      overflow: hidden;
      height: 100%;
      margin: 0 60px;
      font-size: 0.16rem; }
    .yo-dialog > .hd .regret,
    .yo-dialog > .hd .affirm {
      position: absolute;
      top: 0; }
    .yo-dialog > .hd .regret {
      left: .1rem; }
    .yo-dialog > .hd .affirm {
      right: .1rem; }
  .yo-dialog > .bd {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    overflow: auto;
    -webkit-overflow-scrolling: touch;
    min-height: .45rem;
    padding: 0.16rem 0.1rem 0.15rem;
    font-size: 0.16rem; }
  .yo-dialog > .ft {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    text-align: center; }
    .yo-dialog > .ft .yo-btn {
      border-radius: 0;
      border-width: 1px 0 0;
      border-color: #ddd;
      background-color: #fff;
      color: #00afc7;
      display: block;
      -webkit-box-flex: 1;
      -webkit-flex: 1;
      flex: 1;
      width: .1px; }
      .yo-dialog > .ft .yo-btn:active {
        background-color: #f9f9f9; }
      .yo-dialog > .ft .yo-btn:last-child:not(:only-child), .yo-dialog > .ft .yo-btn:only-child {
        font-weight: bold; }
      .yo-dialog > .ft .yo-btn:last-child:not(:only-child) {
        border-left-width: 1px; }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架widget基础构造
 -----------------------
 * Yo内置了常见的通用代码片段，如：列表，表格，按钮组，头
 *
 * @class widget
 * @module Yo
 */
/**
 * @class widget
 */
/**
 * 构造列表的自定义使用方法
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/widget/yo-mask.html)
 * @method yo-mask
 * @param {default | String} $name 定义yo-mask名称
 * @param {default | Color} $bgcolor 定义yo-mask背景色
 */
.yo-mask {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 1000;
  background-color: rgba(255, 255, 255, 0.5); }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架widget基础构造
 -----------------------
 * Yo内置了常见的通用代码片段，如：列表，表格，按钮组，头
 *
 * @class widget
 * @module Yo
 */
/**
 * @class widget
 */
/**
 * 构造列表的自定义使用方法
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/widget/yo-number.html)
 * @method yo-number
 * @param {default | String} $name 定义yo-number名称
 * @param {default | Length} $width 定义yo-number宽度
 * @param {default | Length} $height 定义yo-number高度
 * @param {default | Color} $bordercolor 定义yo-number边框色
 * @param {default | Color} $color 定义yo-number输入框文本色
 * @param {default | Color} $sign-bgcolor 定义yo-number加减号背景色
 * @param {default | Color} $sign-color 定义yo-number加减号文本色
 * @param {default | Color} $disabled-sign-color 定义yo-number禁用文本色
 */
.yo-number {
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: inline-flex;
  overflow: hidden;
  width: 1.2rem;
  height: 0.36rem;
  line-height: 0.36rem;
  border: 1px solid #ddd;
  box-shadow: 1px 1px 1px rgba(221, 221, 221, 0.3);
  background-color: #fff;
  font-size: 0;
  vertical-align: middle; }
  .yo-number > .minus,
  .yo-number > .plus,
  .yo-number > .input {
    text-align: center; }
  .yo-number > .minus,
  .yo-number > .plus {
    display: block;
    width: .35rem;
    background-color: #fafafa;
    color: #999;
    font-size: .3rem;
    font-family: arial;
    cursor: pointer; }
    .yo-number > .minus.disabled,
    .yo-number > .plus.disabled {
      color: #bbb;
      cursor: not-allowed; }
  .yo-number > .input {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    width: .1px;
    border: 1px solid #ddd;
    border-width: 0 1px;
    box-shadow: inset 1px 1px 1px rgba(221, 221, 221, 0.1);
    border-radius: 0;
    color: #212121;
    font-size: .16rem; }
    .yo-number > .input, .yo-number > .input::-webkit-inner-spin-button {
      -webkit-appearance: none;
      appearance: none; }

/**
 * Yo框架全局Variables
 -----------------------
 * Yo基础变量map，如果不想定义某属性，将其value设置为null；
 * Yo仅使用2种长度单位：px用于边框，rem用于除边框之外的所有地方
 *
 * @class variables
 * @module Yo
 */
/**
 * Yo框架全局基础方法
 -----------------------
 * Yo内置了包括响应式方案，CSS3兼容性方案，厂商前缀方案，iconfont方案，flex布局等全局方法
 *
 * @class classes
 * @module Yo
 */
/**
 * 给需要的属性加厂家前缀
 * @method prefix
 * @param {String} $property 指定属性
 * @param {String} $value 指定属性值
 */
/**
 * 四则运算
 * @method calc
 * @param {String} $property 指定需要进行计算的CSS属性
 * @param {String} $value 与原生CSS语法一致，使用方式如：@include calc(width, 100% - 0.1rem);
 */
/**
 * 定义渐变色值
 * @method gradient
 * @param {String} $type 指定渐变的4种类型：linear, repeating-linear, radial, repeating-radial
 * @param {String} $gradient 指定渐变取值，与w3c最新原生语法一致
 */
/**
 * 定义响应式方案
 * @method responsive
 * @param {String} $media 指定媒体查询条件
 */
/**
 * 定义字体图标
 * @method yofont
 */
/**
 * 滤镜
 * @method filter
 * @param {String} $filter 取值与原生语法一致
 */
/**
 * 定义UA默认外观
 * @method appearance
 * @param {String} $appearance 指定UA外观类型
 */
/**
 * 定义是否可以选中元素
 * @method user-select
 * @param {String} $user-select 指定是否可以选中
 */
/**
 * 定义背景图像缩放（Android Browser2.3.*还需要厂商前缀）
 * @method background-size
 * @param {String | Length} $background-size 指定背景图缩放值
 */
/**
 * 定义背景裁减（Android Browser2.3.*还需要厂商前缀）
 * @method background-clip
 * @param {String} $background-clip 指定背景图缩放值
 */
/**
 * 定义背景显示区域（Android Browser2.3.*还需要厂商前缀）
 * @method background-origin
 * @param {String} $background-origin 指定背景图缩放值
 */
/**
 * 定义盒模型
 * @method box-sizing
 * @param {String} $box-sizing 的2个值分别为：content-box(标准盒模型) | border-box(怪异盒模型)
 */
/**
 * 定义圆角
 * @method border-radius
 * @param {String} $border-radius 取值与原生语法一致
 */
/**
 * 定义简单变换
 * @method transform
 * @param {String} $transform 取值与原生语法一致
 */
/**
 * 定义变换原点
 * @method transform-origin
 * @param {String} $transform-origin 取值与原生语法一致
 */
/**
 * 定义动画
 * @method animation
 * @param {String} $animation 取值与原生语法一致
 */
/**
 * 定义补间
 * @method transition
 * @param {String} $transition 取值与原生语法一致
 */
/**
 * 定义显示类型为伸缩盒
 * @method flexbox
 * @param {String} $flexbox 默认值：flex，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素如何分配空间
 * @method flex
 * @param {String} $flex 默认值：1，取值与最新原生语法一致
 * @param {String} $direction 默认值: row
 */
/**
 * 定义伸缩盒子元素的排版顺序
 * @method order
 * @param {String} $order 默认值：1，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的流动方向
 * @method flex-direction
 * @param {String} $flex-direction 默认值：row，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素溢出排版
 * @method flex-wrap
 * @param {String} $flex-wrap 默认值：nowrap，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的水平对齐方式
 * @method justify-content
 * @param {String} $justify-content 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素的垂直对齐方式
 * @method align-items
 * @param {String} $align-items 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义伸缩盒子元素自身的垂直对齐方式
 * @method align-self
 * @param {String} $align-self 默认值：center，取值与最新原生语法一致
 */
/**
 * 定义root root-scroll
 * @method root-scroll
 * @param {String} $root-scroll 指定scroll类型，取值overflow属性的标准值
 */
/**
 * 定义是否有滚动条
 * @method overflow
 * @param {String} $overflow 默认值：auto，取值与最新原生语法一致
 */
/**
 * 生成矩形方法
 * @method rect
 * @param {Length} $width 定义矩形的长度
 * @param {Length} $height 定义矩形的高度
 */
/**
 * 生成正方形方法
 * @method square
 * @param {Length} $size 定义正方形的边长
 */
/**
 * 生成圆形方法
 * @method circle
 * @param {Length} $size 定义圆的半径长度
 * @param {Length} $radius 定义圆的圆角半径长度
 */
/**
 * 生成全屏方法
 * @method fullscreen
 * @param {Integer} $z-index 定义层叠级别
 */
/**
 * 清除浮动方案
 * @method clearfix
 */
/**
 * 链接处理方法
 * @method link
 * @param {Color} $color 定义链接颜色
 */
/**
 * 强制换行方案
 * @method wrap
 */
/**
 * 单行文本溢出显示方案
 * @method ellipsis
 * @param {Boolen} $ellipsis 定义是否需要省略号
 */
/**
 * 文字隐藏方案
 * @method texthide
 */
/**
 * 清除间隙方案-容器
 * @method killspace
 */
/**
 * 清除间隙方案-子级
 * @method killspace-item
 */
/**
 * 未知尺寸元素垂直居中解决方案-容器
 * @method valign
 */
/**
 * 未知尺寸元素垂直居中解决方案-子级
 * @method valign-item
 */
/**
 * 已知尺寸元素垂直居中解决方案
 * @method alignment
 * @param {Length} $width 居中元素的宽度
 * @param {Length} $height 居中元素的高度
 */
/**
 * Yo框架widget基础构造
 -----------------------
 * Yo内置了常见的通用代码片段，如：列表，表格，按钮组，头
 *
 * @class widget
 * @module Yo
 */
/**
 * @class widget
 */
/**
 * 构造列表的自定义使用方法
 -----------------------
 * 使用方法，详见 [Demo](http://doyoe.github.io/Yo/demo/widget/yo-tab.html)
 * @method yo-tab
 * @param {String} $name 扩展的名称
 * @param {Length} {ver:1.8.3} $width 组件宽度
 * @param {Length} $height 组件高度
 * @param {Length} $radius 圆角半径
 * @param {Length} $border-width 边框厚度
 * @param {Color} $bordercolor 边框色
 * @param {Color} $bgcolor 背景色
 * @param {Color} $color 文本色
 * @param {Color} $on-bgcolor 激活时背景色
 * @param {Color} $on-color 激活时文本色
 * @param {Color} $font-size 文本字号
 * @param {Color} $x-ico-size 子项内容为水平ico时，ico的大小
 * @param {Color} $y-ico-size 子项内容为垂直ico时，ico的大小
 * @param {Color} $only-ico-size 子项内容仅有ico时，ico的大小
 * @param {Length} $item-border-height 子项的间隔线高度
 * @param {Color} $item-bordercolor 子项的间隔线颜色
 */
.yo-tab {
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  overflow: hidden;
  height: 0.49rem;
  -webkit-background-clip: padding-box !important;
  background-clip: padding-box !important;
  border-width: 0.01rem 0 0 0;
  border-style: solid;
  border-color: #ddd;
  background-color: #fafafa;
  text-align: center;
  line-height: 0.49rem; }
  .yo-tab > .item {
    display: block;
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    flex: 1;
    width: .1px;
    position: relative;
    color: #212121; }
    .yo-tab > .item:not(:last-child)::after {
      position: absolute;
      top: 50%;
      right: 0;
      -webkit-transform: translatey(-50%);
      transform: translatey(-50%);
      width: 1px;
      height: 100%;
      background-color: transparent;
      content: "\0020"; }
    .yo-tab > .item.item-on {
      color: #00bec8; }
    .yo-tab > .item-y-ico {
      padding-top: .04rem;
      line-height: .2rem; }
      .yo-tab > .item-y-ico .yo-ico {
        display: block;
        font-size: 0.2rem; }
    .yo-tab > .item-x-ico .yo-ico {
      font-size: 0.24rem; }
    .yo-tab > .item-only-ico .yo-ico {
      font-size: 0.32rem; }

/*# sourceMappingURL=index.css.map */
